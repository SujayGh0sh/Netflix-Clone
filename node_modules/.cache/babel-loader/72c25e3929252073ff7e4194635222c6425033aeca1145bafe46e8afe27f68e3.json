{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sujayghosh/Documents/netflix/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/sujayghosh/Documents/netflix/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/sujayghosh/Documents/netflix/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"/Users/sujayghosh/Documents/netflix/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"/Users/sujayghosh/Documents/netflix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/sujayghosh/Documents/netflix/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _ERROR_MAP;\nimport '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB } from 'idb';\nimport { ErrorFactory, validateIndexedDBOpenable, isIndexedDBAvailable, areCookiesEnabled, getModularInstance } from '@firebase/util';\nimport { _registerComponent, registerVersion, _getProvider, getApp } from '@firebase/app';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nvar CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nvar CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nvar CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nvar MessageType$1;\n(function (MessageType) {\n  MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n  MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\nvar MessageType;\n(function (MessageType) {\n  MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction arrayToBase64(array) {\n  var uint8Array = new Uint8Array(array);\n  var base64String = btoa(String.fromCharCode.apply(String, _toConsumableArray(uint8Array)));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction base64ToArray(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar OLD_DB_NAME = 'fcm_token_details_db';\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\nvar OLD_DB_VERSION = 5;\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\nfunction migrateOldDatabase(_x) {\n  return _migrateOldDatabase.apply(this, arguments);\n}\nfunction _migrateOldDatabase() {\n  _migrateOldDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(senderId) {\n    var databases, dbNames, tokenDetails, db;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!('databases' in indexedDB)) {\n            _context2.next = 7;\n            break;\n          }\n          _context2.next = 3;\n          return indexedDB.databases();\n        case 3:\n          databases = _context2.sent;\n          dbNames = databases.map(function (db) {\n            return db.name;\n          });\n          if (dbNames.includes(OLD_DB_NAME)) {\n            _context2.next = 7;\n            break;\n          }\n          return _context2.abrupt(\"return\", null);\n        case 7:\n          tokenDetails = null;\n          _context2.next = 10;\n          return openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n            upgrade: function () {\n              var _upgrade = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(db, oldVersion, newVersion, upgradeTransaction) {\n                var _a, objectStore, value, oldDetails, _oldDetails, _oldDetails2;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!(oldVersion < 2)) {\n                        _context.next = 2;\n                        break;\n                      }\n                      return _context.abrupt(\"return\");\n                    case 2:\n                      if (db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n                        _context.next = 4;\n                        break;\n                      }\n                      return _context.abrupt(\"return\");\n                    case 4:\n                      objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n                      _context.next = 7;\n                      return objectStore.index('fcmSenderId').get(senderId);\n                    case 7:\n                      value = _context.sent;\n                      _context.next = 10;\n                      return objectStore.clear();\n                    case 10:\n                      if (value) {\n                        _context.next = 12;\n                        break;\n                      }\n                      return _context.abrupt(\"return\");\n                    case 12:\n                      if (!(oldVersion === 2)) {\n                        _context.next = 19;\n                        break;\n                      }\n                      oldDetails = value;\n                      if (!(!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint)) {\n                        _context.next = 16;\n                        break;\n                      }\n                      return _context.abrupt(\"return\");\n                    case 16:\n                      tokenDetails = {\n                        token: oldDetails.fcmToken,\n                        createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n                        subscriptionOptions: {\n                          auth: oldDetails.auth,\n                          p256dh: oldDetails.p256dh,\n                          endpoint: oldDetails.endpoint,\n                          swScope: oldDetails.swScope,\n                          vapidKey: typeof oldDetails.vapidKey === 'string' ? oldDetails.vapidKey : arrayToBase64(oldDetails.vapidKey)\n                        }\n                      };\n                      _context.next = 20;\n                      break;\n                    case 19:\n                      if (oldVersion === 3) {\n                        _oldDetails = value;\n                        tokenDetails = {\n                          token: _oldDetails.fcmToken,\n                          createTime: _oldDetails.createTime,\n                          subscriptionOptions: {\n                            auth: arrayToBase64(_oldDetails.auth),\n                            p256dh: arrayToBase64(_oldDetails.p256dh),\n                            endpoint: _oldDetails.endpoint,\n                            swScope: _oldDetails.swScope,\n                            vapidKey: arrayToBase64(_oldDetails.vapidKey)\n                          }\n                        };\n                      } else if (oldVersion === 4) {\n                        _oldDetails2 = value;\n                        tokenDetails = {\n                          token: _oldDetails2.fcmToken,\n                          createTime: _oldDetails2.createTime,\n                          subscriptionOptions: {\n                            auth: arrayToBase64(_oldDetails2.auth),\n                            p256dh: arrayToBase64(_oldDetails2.p256dh),\n                            endpoint: _oldDetails2.endpoint,\n                            swScope: _oldDetails2.swScope,\n                            vapidKey: arrayToBase64(_oldDetails2.vapidKey)\n                          }\n                        };\n                      }\n                    case 20:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n              function upgrade(_x36, _x37, _x38, _x39) {\n                return _upgrade.apply(this, arguments);\n              }\n              return upgrade;\n            }()\n          });\n        case 10:\n          db = _context2.sent;\n          db.close();\n          // Delete all old databases.\n          _context2.next = 14;\n          return deleteDB(OLD_DB_NAME);\n        case 14:\n          _context2.next = 16;\n          return deleteDB('fcm_vapid_details_db');\n        case 16:\n          _context2.next = 18;\n          return deleteDB('undefined');\n        case 18:\n          return _context2.abrupt(\"return\", checkTokenDetails(tokenDetails) ? tokenDetails : null);\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _migrateOldDatabase.apply(this, arguments);\n}\nfunction checkTokenDetails(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  var subscriptionOptions = tokenDetails.subscriptionOptions;\n  return typeof tokenDetails.createTime === 'number' && tokenDetails.createTime > 0 && typeof tokenDetails.token === 'string' && tokenDetails.token.length > 0 && typeof subscriptionOptions.auth === 'string' && subscriptionOptions.auth.length > 0 && typeof subscriptionOptions.p256dh === 'string' && subscriptionOptions.p256dh.length > 0 && typeof subscriptionOptions.endpoint === 'string' && subscriptionOptions.endpoint.length > 0 && typeof subscriptionOptions.swScope === 'string' && subscriptionOptions.swScope.length > 0 && typeof subscriptionOptions.vapidKey === 'string' && subscriptionOptions.vapidKey.length > 0;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Exported for tests.\nvar DATABASE_NAME = 'firebase-messaging-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-messaging-store';\nvar dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: function upgrade(upgradeDb, oldVersion) {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\nfunction dbGet(_x2) {\n  return _dbGet.apply(this, arguments);\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nfunction _dbGet() {\n  _dbGet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(firebaseDependencies) {\n    var key, db, tokenDetails, oldTokenDetails;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          key = getKey(firebaseDependencies);\n          _context3.next = 3;\n          return getDbPromise();\n        case 3:\n          db = _context3.sent;\n          _context3.next = 6;\n          return db.transaction(OBJECT_STORE_NAME).objectStore(OBJECT_STORE_NAME).get(key);\n        case 6:\n          tokenDetails = _context3.sent;\n          if (!tokenDetails) {\n            _context3.next = 11;\n            break;\n          }\n          return _context3.abrupt(\"return\", tokenDetails);\n        case 11:\n          _context3.next = 13;\n          return migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n        case 13:\n          oldTokenDetails = _context3.sent;\n          if (!oldTokenDetails) {\n            _context3.next = 18;\n            break;\n          }\n          _context3.next = 17;\n          return dbSet(firebaseDependencies, oldTokenDetails);\n        case 17:\n          return _context3.abrupt(\"return\", oldTokenDetails);\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _dbGet.apply(this, arguments);\n}\nfunction dbSet(_x3, _x4) {\n  return _dbSet.apply(this, arguments);\n}\n/** Removes record(s) from the objectStore that match the given key. */\nfunction _dbSet() {\n  _dbSet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(firebaseDependencies, tokenDetails) {\n    var key, db, tx;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          key = getKey(firebaseDependencies);\n          _context4.next = 3;\n          return getDbPromise();\n        case 3:\n          db = _context4.sent;\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          _context4.next = 7;\n          return tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n        case 7:\n          _context4.next = 9;\n          return tx.done;\n        case 9:\n          return _context4.abrupt(\"return\", tokenDetails);\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _dbSet.apply(this, arguments);\n}\nfunction dbRemove(_x5) {\n  return _dbRemove.apply(this, arguments);\n}\nfunction _dbRemove() {\n  _dbRemove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(firebaseDependencies) {\n    var key, db, tx;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          key = getKey(firebaseDependencies);\n          _context5.next = 3;\n          return getDbPromise();\n        case 3:\n          db = _context5.sent;\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          _context5.next = 7;\n          return tx.objectStore(OBJECT_STORE_NAME).delete(key);\n        case 7:\n          _context5.next = 9;\n          return tx.done;\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _dbRemove.apply(this, arguments);\n}\nfunction getKey(_ref) {\n  var appConfig = _ref.appConfig;\n  return appConfig.appId;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ERROR_MAP = (_ERROR_MAP = {}, _defineProperty(_ERROR_MAP, \"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, 'Missing App configuration value: \"{$valueName}\"'), _defineProperty(_ERROR_MAP, \"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */, 'This method is available in a Window context.'), _defineProperty(_ERROR_MAP, \"only-available-in-sw\" /* ErrorCode.AVAILABLE_IN_SW */, 'This method is available in a service worker context.'), _defineProperty(_ERROR_MAP, \"permission-default\" /* ErrorCode.PERMISSION_DEFAULT */, 'The notification permission was not granted and dismissed instead.'), _defineProperty(_ERROR_MAP, \"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */, 'The notification permission was not granted and blocked instead.'), _defineProperty(_ERROR_MAP, \"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */, \"This browser doesn't support the API's required to use the Firebase SDK.\"), _defineProperty(_ERROR_MAP, \"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */, \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\"), _defineProperty(_ERROR_MAP, \"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */, 'We are unable to register the default service worker. {$browserErrorMessage}'), _defineProperty(_ERROR_MAP, \"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, 'A problem occurred while subscribing the user to FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */, 'FCM returned no token when subscribing the user to push.'), _defineProperty(_ERROR_MAP, \"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, 'A problem occurred while unsubscribing the ' + 'user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, 'A problem occurred while updating the user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */, 'FCM returned no token when updating the user to push.'), _defineProperty(_ERROR_MAP, \"use-sw-after-get-token\" /* ErrorCode.USE_SW_AFTER_GET_TOKEN */, 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.'), _defineProperty(_ERROR_MAP, \"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */, 'The input to useServiceWorker() must be a ServiceWorkerRegistration.'), _defineProperty(_ERROR_MAP, \"invalid-bg-handler\" /* ErrorCode.INVALID_BG_HANDLER */, 'The input to setBackgroundMessageHandler() must be a function.'), _defineProperty(_ERROR_MAP, \"invalid-vapid-key\" /* ErrorCode.INVALID_VAPID_KEY */, 'The public VAPID key must be a string.'), _defineProperty(_ERROR_MAP, \"use-vapid-key-after-get-token\" /* ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN */, 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.'), _ERROR_MAP);\nvar ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction requestGetToken(_x6, _x7) {\n  return _requestGetToken.apply(this, arguments);\n}\nfunction _requestGetToken() {\n  _requestGetToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(firebaseDependencies, subscriptionOptions) {\n    var headers, body, subscribeOptions, responseData, response, message;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return getHeaders(firebaseDependencies);\n        case 2:\n          headers = _context6.sent;\n          body = getBody(subscriptionOptions);\n          subscribeOptions = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          _context6.prev = 5;\n          _context6.next = 8;\n          return fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n        case 8:\n          response = _context6.sent;\n          _context6.next = 11;\n          return response.json();\n        case 11:\n          responseData = _context6.sent;\n          _context6.next = 17;\n          break;\n        case 14:\n          _context6.prev = 14;\n          _context6.t0 = _context6[\"catch\"](5);\n          throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\n            errorInfo: _context6.t0 === null || _context6.t0 === void 0 ? void 0 : _context6.t0.toString()\n          });\n        case 17:\n          if (!responseData.error) {\n            _context6.next = 20;\n            break;\n          }\n          message = responseData.error.message;\n          throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\n            errorInfo: message\n          });\n        case 20:\n          if (responseData.token) {\n            _context6.next = 22;\n            break;\n          }\n          throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */);\n        case 22:\n          return _context6.abrupt(\"return\", responseData.token);\n        case 23:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[5, 14]]);\n  }));\n  return _requestGetToken.apply(this, arguments);\n}\nfunction requestUpdateToken(_x8, _x9) {\n  return _requestUpdateToken.apply(this, arguments);\n}\nfunction _requestUpdateToken() {\n  _requestUpdateToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(firebaseDependencies, tokenDetails) {\n    var headers, body, updateOptions, responseData, response, message;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return getHeaders(firebaseDependencies);\n        case 2:\n          headers = _context7.sent;\n          body = getBody(tokenDetails.subscriptionOptions);\n          updateOptions = {\n            method: 'PATCH',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          _context7.prev = 5;\n          _context7.next = 8;\n          return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(tokenDetails.token), updateOptions);\n        case 8:\n          response = _context7.sent;\n          _context7.next = 11;\n          return response.json();\n        case 11:\n          responseData = _context7.sent;\n          _context7.next = 17;\n          break;\n        case 14:\n          _context7.prev = 14;\n          _context7.t0 = _context7[\"catch\"](5);\n          throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\n            errorInfo: _context7.t0 === null || _context7.t0 === void 0 ? void 0 : _context7.t0.toString()\n          });\n        case 17:\n          if (!responseData.error) {\n            _context7.next = 20;\n            break;\n          }\n          message = responseData.error.message;\n          throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\n            errorInfo: message\n          });\n        case 20:\n          if (responseData.token) {\n            _context7.next = 22;\n            break;\n          }\n          throw ERROR_FACTORY.create(\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */);\n        case 22:\n          return _context7.abrupt(\"return\", responseData.token);\n        case 23:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[5, 14]]);\n  }));\n  return _requestUpdateToken.apply(this, arguments);\n}\nfunction requestDeleteToken(_x10, _x11) {\n  return _requestDeleteToken.apply(this, arguments);\n}\nfunction _requestDeleteToken() {\n  _requestDeleteToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(firebaseDependencies, token) {\n    var headers, unsubscribeOptions, response, responseData, message;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return getHeaders(firebaseDependencies);\n        case 2:\n          headers = _context8.sent;\n          unsubscribeOptions = {\n            method: 'DELETE',\n            headers: headers\n          };\n          _context8.prev = 4;\n          _context8.next = 7;\n          return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(token), unsubscribeOptions);\n        case 7:\n          response = _context8.sent;\n          _context8.next = 10;\n          return response.json();\n        case 10:\n          responseData = _context8.sent;\n          if (!responseData.error) {\n            _context8.next = 14;\n            break;\n          }\n          message = responseData.error.message;\n          throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\n            errorInfo: message\n          });\n        case 14:\n          _context8.next = 19;\n          break;\n        case 16:\n          _context8.prev = 16;\n          _context8.t0 = _context8[\"catch\"](4);\n          throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\n            errorInfo: _context8.t0 === null || _context8.t0 === void 0 ? void 0 : _context8.t0.toString()\n          });\n        case 19:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[4, 16]]);\n  }));\n  return _requestDeleteToken.apply(this, arguments);\n}\nfunction getEndpoint(_ref2) {\n  var projectId = _ref2.projectId;\n  return \"\".concat(ENDPOINT, \"/projects/\").concat(projectId, \"/registrations\");\n}\nfunction getHeaders(_x12) {\n  return _getHeaders.apply(this, arguments);\n}\nfunction _getHeaders() {\n  _getHeaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(_ref3) {\n    var appConfig, installations, authToken;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          appConfig = _ref3.appConfig, installations = _ref3.installations;\n          _context9.next = 3;\n          return installations.getToken();\n        case 3:\n          authToken = _context9.sent;\n          return _context9.abrupt(\"return\", new Headers({\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'x-goog-api-key': appConfig.apiKey,\n            'x-goog-firebase-installations-auth': \"FIS \".concat(authToken)\n          }));\n        case 5:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return _getHeaders.apply(this, arguments);\n}\nfunction getBody(_ref4) {\n  var p256dh = _ref4.p256dh,\n    auth = _ref4.auth,\n    endpoint = _ref4.endpoint,\n    vapidKey = _ref4.vapidKey;\n  var body = {\n    web: {\n      endpoint: endpoint,\n      auth: auth,\n      p256dh: p256dh\n    }\n  };\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n  return body;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// UpdateRegistration will be called once every week.\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\nfunction getTokenInternal(_x13) {\n  return _getTokenInternal.apply(this, arguments);\n}\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\nfunction _getTokenInternal() {\n  _getTokenInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(messaging) {\n    var pushSubscription, subscriptionOptions, tokenDetails;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n        case 2:\n          pushSubscription = _context10.sent;\n          subscriptionOptions = {\n            vapidKey: messaging.vapidKey,\n            swScope: messaging.swRegistration.scope,\n            endpoint: pushSubscription.endpoint,\n            auth: arrayToBase64(pushSubscription.getKey('auth')),\n            p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n          };\n          _context10.next = 6;\n          return dbGet(messaging.firebaseDependencies);\n        case 6:\n          tokenDetails = _context10.sent;\n          if (tokenDetails) {\n            _context10.next = 11;\n            break;\n          }\n          return _context10.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n        case 11:\n          if (isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n            _context10.next = 23;\n            break;\n          }\n          _context10.prev = 12;\n          _context10.next = 15;\n          return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n        case 15:\n          _context10.next = 20;\n          break;\n        case 17:\n          _context10.prev = 17;\n          _context10.t0 = _context10[\"catch\"](12);\n          // Suppress errors because of #2364\n          console.warn(_context10.t0);\n        case 20:\n          return _context10.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n        case 23:\n          if (!(Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS)) {\n            _context10.next = 27;\n            break;\n          }\n          return _context10.abrupt(\"return\", updateToken(messaging, {\n            token: tokenDetails.token,\n            createTime: Date.now(),\n            subscriptionOptions: subscriptionOptions\n          }));\n        case 27:\n          return _context10.abrupt(\"return\", tokenDetails.token);\n        case 28:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[12, 17]]);\n  }));\n  return _getTokenInternal.apply(this, arguments);\n}\nfunction deleteTokenInternal(_x14) {\n  return _deleteTokenInternal.apply(this, arguments);\n}\nfunction _deleteTokenInternal() {\n  _deleteTokenInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(messaging) {\n    var tokenDetails, pushSubscription;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return dbGet(messaging.firebaseDependencies);\n        case 2:\n          tokenDetails = _context11.sent;\n          if (!tokenDetails) {\n            _context11.next = 8;\n            break;\n          }\n          _context11.next = 6;\n          return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n        case 6:\n          _context11.next = 8;\n          return dbRemove(messaging.firebaseDependencies);\n        case 8:\n          _context11.next = 10;\n          return messaging.swRegistration.pushManager.getSubscription();\n        case 10:\n          pushSubscription = _context11.sent;\n          if (!pushSubscription) {\n            _context11.next = 13;\n            break;\n          }\n          return _context11.abrupt(\"return\", pushSubscription.unsubscribe());\n        case 13:\n          return _context11.abrupt(\"return\", true);\n        case 14:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return _deleteTokenInternal.apply(this, arguments);\n}\nfunction updateToken(_x15, _x16) {\n  return _updateToken.apply(this, arguments);\n}\nfunction _updateToken() {\n  _updateToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(messaging, tokenDetails) {\n    var updatedToken, updatedTokenDetails;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n        case 3:\n          updatedToken = _context12.sent;\n          updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), {\n            token: updatedToken,\n            createTime: Date.now()\n          });\n          _context12.next = 7;\n          return dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n        case 7:\n          return _context12.abrupt(\"return\", updatedToken);\n        case 10:\n          _context12.prev = 10;\n          _context12.t0 = _context12[\"catch\"](0);\n          _context12.next = 14;\n          return deleteTokenInternal(messaging);\n        case 14:\n          throw _context12.t0;\n        case 15:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12, null, [[0, 10]]);\n  }));\n  return _updateToken.apply(this, arguments);\n}\nfunction getNewToken(_x17, _x18) {\n  return _getNewToken.apply(this, arguments);\n}\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\nfunction _getNewToken() {\n  _getNewToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(firebaseDependencies, subscriptionOptions) {\n    var token, tokenDetails;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return requestGetToken(firebaseDependencies, subscriptionOptions);\n        case 2:\n          token = _context13.sent;\n          tokenDetails = {\n            token: token,\n            createTime: Date.now(),\n            subscriptionOptions: subscriptionOptions\n          };\n          _context13.next = 6;\n          return dbSet(firebaseDependencies, tokenDetails);\n        case 6:\n          return _context13.abrupt(\"return\", tokenDetails.token);\n        case 7:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13);\n  }));\n  return _getNewToken.apply(this, arguments);\n}\nfunction getPushSubscription(_x19, _x20) {\n  return _getPushSubscription.apply(this, arguments);\n}\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\nfunction _getPushSubscription() {\n  _getPushSubscription = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(swRegistration, vapidKey) {\n    var subscription;\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return swRegistration.pushManager.getSubscription();\n        case 2:\n          subscription = _context14.sent;\n          if (!subscription) {\n            _context14.next = 5;\n            break;\n          }\n          return _context14.abrupt(\"return\", subscription);\n        case 5:\n          return _context14.abrupt(\"return\", swRegistration.pushManager.subscribe({\n            userVisibleOnly: true,\n            // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n            // submitted to pushManager#subscribe must be of type Uint8Array.\n            applicationServerKey: base64ToArray(vapidKey)\n          }));\n        case 6:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14);\n  }));\n  return _getPushSubscription.apply(this, arguments);\n}\nfunction isTokenValid(dbOptions, currentOptions) {\n  var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  var isAuthEqual = currentOptions.auth === dbOptions.auth;\n  var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction externalizePayload(internalPayload) {\n  var payload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  };\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n  return payload;\n}\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n  payload.notification = {};\n  var title = messagePayloadInternal.notification.title;\n  if (!!title) {\n    payload.notification.title = title;\n  }\n  var body = messagePayloadInternal.notification.body;\n  if (!!body) {\n    payload.notification.body = body;\n  }\n  var image = messagePayloadInternal.notification.image;\n  if (!!image) {\n    payload.notification.image = image;\n  }\n  var icon = messagePayloadInternal.notification.icon;\n  if (!!icon) {\n    payload.notification.icon = icon;\n  }\n}\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n  payload.data = messagePayloadInternal.data;\n}\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n  var _a, _b, _c, _d, _e;\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (!messagePayloadInternal.fcmOptions && !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\n    return;\n  }\n  payload.fcmOptions = {};\n  var link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\n  if (!!link) {\n    payload.fcmOptions.link = link;\n  }\n  // eslint-disable-next-line camelcase\n  var analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions.analyticsLabel = analyticsLabel;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isConsoleMessage(data) {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\nfunction _mergeStrings(s1, s2) {\n  var resultArray = [];\n  for (var i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n  return resultArray.join('');\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n  // Required app config keys\n  var configKeys = ['projectId', 'apiKey', 'appId', 'messagingSenderId'];\n  var options = app.options;\n  for (var _i = 0, _configKeys = configKeys; _i < _configKeys.length; _i++) {\n    var keyName = _configKeys[_i];\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n  return {\n    appName: app.name,\n    projectId: options.projectId,\n    apiKey: options.apiKey,\n    appId: options.appId,\n    senderId: options.messagingSenderId\n  };\n}\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n    valueName: valueName\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MessagingService = /*#__PURE__*/function () {\n  function MessagingService(app, installations, analyticsProvider) {\n    _classCallCheck(this, MessagingService);\n    // logging is only done with end user consent. Default to false.\n    this.deliveryMetricsExportedToBigQueryEnabled = false;\n    this.onBackgroundMessageHandler = null;\n    this.onMessageHandler = null;\n    this.logEvents = [];\n    this.isLogServiceStarted = false;\n    var appConfig = extractAppConfig(app);\n    this.firebaseDependencies = {\n      app: app,\n      appConfig: appConfig,\n      installations: installations,\n      analyticsProvider: analyticsProvider\n    };\n  }\n  _createClass(MessagingService, [{\n    key: \"_delete\",\n    value: function _delete() {\n      return Promise.resolve();\n    }\n  }]);\n  return MessagingService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerDefaultSw(_x21) {\n  return _registerDefaultSw.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _registerDefaultSw() {\n  _registerDefaultSw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(messaging) {\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n            scope: DEFAULT_SW_SCOPE\n          });\n        case 3:\n          messaging.swRegistration = _context15.sent;\n          // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n          // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n          // is stuck with the old version. For example,\n          // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n          // sw if there was an update.\n          messaging.swRegistration.update().catch(function () {\n            /* it is non blocking and we don't care if it failed */\n          });\n          _context15.next = 10;\n          break;\n        case 7:\n          _context15.prev = 7;\n          _context15.t0 = _context15[\"catch\"](0);\n          throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */, {\n            browserErrorMessage: _context15.t0 === null || _context15.t0 === void 0 ? void 0 : _context15.t0.message\n          });\n        case 10:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15, null, [[0, 7]]);\n  }));\n  return _registerDefaultSw.apply(this, arguments);\n}\nfunction updateSwReg(_x22, _x23) {\n  return _updateSwReg.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _updateSwReg() {\n  _updateSwReg = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(messaging, swRegistration) {\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          if (!(!swRegistration && !messaging.swRegistration)) {\n            _context16.next = 3;\n            break;\n          }\n          _context16.next = 3;\n          return registerDefaultSw(messaging);\n        case 3:\n          if (!(!swRegistration && !!messaging.swRegistration)) {\n            _context16.next = 5;\n            break;\n          }\n          return _context16.abrupt(\"return\");\n        case 5:\n          if (swRegistration instanceof ServiceWorkerRegistration) {\n            _context16.next = 7;\n            break;\n          }\n          throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */);\n        case 7:\n          messaging.swRegistration = swRegistration;\n        case 8:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return _updateSwReg.apply(this, arguments);\n}\nfunction updateVapidKey(_x24, _x25) {\n  return _updateVapidKey.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _updateVapidKey() {\n  _updateVapidKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(messaging, vapidKey) {\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          if (!!vapidKey) {\n            messaging.vapidKey = vapidKey;\n          } else if (!messaging.vapidKey) {\n            messaging.vapidKey = DEFAULT_VAPID_KEY;\n          }\n        case 1:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return _updateVapidKey.apply(this, arguments);\n}\nfunction getToken$1(_x26, _x27) {\n  return _getToken$.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getToken$() {\n  _getToken$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(messaging, options) {\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          if (navigator) {\n            _context18.next = 2;\n            break;\n          }\n          throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n        case 2:\n          if (!(Notification.permission === 'default')) {\n            _context18.next = 5;\n            break;\n          }\n          _context18.next = 5;\n          return Notification.requestPermission();\n        case 5:\n          if (!(Notification.permission !== 'granted')) {\n            _context18.next = 7;\n            break;\n          }\n          throw ERROR_FACTORY.create(\"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */);\n        case 7:\n          _context18.next = 9;\n          return updateVapidKey(messaging, options === null || options === void 0 ? void 0 : options.vapidKey);\n        case 9:\n          _context18.next = 11;\n          return updateSwReg(messaging, options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration);\n        case 11:\n          return _context18.abrupt(\"return\", getTokenInternal(messaging));\n        case 12:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return _getToken$.apply(this, arguments);\n}\nfunction logToScion(_x28, _x29, _x30) {\n  return _logToScion.apply(this, arguments);\n}\nfunction _logToScion() {\n  _logToScion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(messaging, messageType, data) {\n    var eventType, analytics;\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          eventType = getEventType(messageType);\n          _context19.next = 3;\n          return messaging.firebaseDependencies.analyticsProvider.get();\n        case 3:\n          analytics = _context19.sent;\n          analytics.logEvent(eventType, {\n            /* eslint-disable camelcase */\n            message_id: data[CONSOLE_CAMPAIGN_ID],\n            message_name: data[CONSOLE_CAMPAIGN_NAME],\n            message_time: data[CONSOLE_CAMPAIGN_TIME],\n            message_device_time: Math.floor(Date.now() / 1000)\n            /* eslint-enable camelcase */\n          });\n        case 5:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return _logToScion.apply(this, arguments);\n}\nfunction getEventType(messageType) {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction messageEventListener(_x31, _x32) {\n  return _messageEventListener.apply(this, arguments);\n}\nfunction _messageEventListener() {\n  _messageEventListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(messaging, event) {\n    var internalPayload, dataPayload;\n    return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n      while (1) switch (_context20.prev = _context20.next) {\n        case 0:\n          internalPayload = event.data;\n          if (internalPayload.isFirebaseMessaging) {\n            _context20.next = 3;\n            break;\n          }\n          return _context20.abrupt(\"return\");\n        case 3:\n          if (messaging.onMessageHandler && internalPayload.messageType === MessageType.PUSH_RECEIVED) {\n            if (typeof messaging.onMessageHandler === 'function') {\n              messaging.onMessageHandler(externalizePayload(internalPayload));\n            } else {\n              messaging.onMessageHandler.next(externalizePayload(internalPayload));\n            }\n          }\n          // Log to Scion if applicable\n          dataPayload = internalPayload.data;\n          if (!(isConsoleMessage(dataPayload) && dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1')) {\n            _context20.next = 8;\n            break;\n          }\n          _context20.next = 8;\n          return logToScion(messaging, internalPayload.messageType, dataPayload);\n        case 8:\n        case \"end\":\n          return _context20.stop();\n      }\n    }, _callee20);\n  }));\n  return _messageEventListener.apply(this, arguments);\n}\nvar name = \"@firebase/messaging\";\nvar version = \"0.12.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar WindowMessagingFactory = function WindowMessagingFactory(container) {\n  var messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n  navigator.serviceWorker.addEventListener('message', function (e) {\n    return messageEventListener(messaging, e);\n  });\n  return messaging;\n};\nvar WindowMessagingInternalFactory = function WindowMessagingInternalFactory(container) {\n  var messaging = container.getProvider('messaging').getImmediate();\n  var messagingInternal = {\n    getToken: function getToken(options) {\n      return getToken$1(messaging, options);\n    }\n  };\n  return messagingInternal;\n};\nfunction registerMessagingInWindow() {\n  _registerComponent(new Component('messaging', WindowMessagingFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  _registerComponent(new Component('messaging-internal', WindowMessagingInternalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, 'esm2017');\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Checks if all required APIs exist in the browser.\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\nfunction isWindowSupported() {\n  return _isWindowSupported.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _isWindowSupported() {\n  _isWindowSupported = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n    return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n      while (1) switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.prev = 0;\n          _context21.next = 3;\n          return validateIndexedDBOpenable();\n        case 3:\n          _context21.next = 8;\n          break;\n        case 5:\n          _context21.prev = 5;\n          _context21.t0 = _context21[\"catch\"](0);\n          return _context21.abrupt(\"return\", false);\n        case 8:\n          return _context21.abrupt(\"return\", typeof window !== 'undefined' && isIndexedDBAvailable() && areCookiesEnabled() && 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey'));\n        case 9:\n        case \"end\":\n          return _context21.stop();\n      }\n    }, _callee21, null, [[0, 5]]);\n  }));\n  return _isWindowSupported.apply(this, arguments);\n}\nfunction deleteToken$1(_x33) {\n  return _deleteToken$.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _deleteToken$() {\n  _deleteToken$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(messaging) {\n    return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n      while (1) switch (_context22.prev = _context22.next) {\n        case 0:\n          if (navigator) {\n            _context22.next = 2;\n            break;\n          }\n          throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n        case 2:\n          if (messaging.swRegistration) {\n            _context22.next = 5;\n            break;\n          }\n          _context22.next = 5;\n          return registerDefaultSw(messaging);\n        case 5:\n          return _context22.abrupt(\"return\", deleteTokenInternal(messaging));\n        case 6:\n        case \"end\":\n          return _context22.stop();\n      }\n    }, _callee22);\n  }));\n  return _deleteToken$.apply(this, arguments);\n}\nfunction onMessage$1(messaging, nextOrObserver) {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n  return function () {\n    messaging.onMessageHandler = null;\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\nfunction getMessagingInWindow() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(function (isSupported) {\n    // If `isWindowSupported()` resolved, but returned false.\n    if (!isSupported) {\n      throw ERROR_FACTORY.create(\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */);\n    }\n  }, function (_) {\n    // If `isWindowSupported()` rejected.\n    throw ERROR_FACTORY.create(\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */);\n  });\n\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n/**\r\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\r\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\r\n * instance.\r\n *\r\n * If a notification permission isn't already granted, this method asks the user for permission. The\r\n * returned promise rejects if the user does not allow the app to show notifications.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param options - Provides an optional vapid key and an optinoal service worker registration\r\n *\r\n * @returns The promise resolves with an FCM registration token.\r\n *\r\n * @public\r\n */\nfunction getToken(_x34, _x35) {\n  return _getToken.apply(this, arguments);\n}\n/**\r\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\r\n * the {@link Messaging} instance from the push subscription.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n *\r\n * @returns The promise resolves when the token has been successfully deleted.\r\n *\r\n * @public\r\n */\nfunction _getToken() {\n  _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(messaging, options) {\n    return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n      while (1) switch (_context23.prev = _context23.next) {\n        case 0:\n          messaging = getModularInstance(messaging);\n          return _context23.abrupt(\"return\", getToken$1(messaging, options));\n        case 2:\n        case \"end\":\n          return _context23.stop();\n      }\n    }, _callee23);\n  }));\n  return _getToken.apply(this, arguments);\n}\nfunction deleteToken(messaging) {\n  messaging = getModularInstance(messaging);\n  return deleteToken$1(messaging);\n}\n/**\r\n * When a push message is received and the user is currently on a page for your origin, the\r\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\r\n * the push message.\r\n *\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined,\r\n *     is called when a message is received and the user is currently viewing your page.\r\n * @returns To stop listening for messages execute this returned function.\r\n *\r\n * @public\r\n */\nfunction onMessage(messaging, nextOrObserver) {\n  messaging = getModularInstance(messaging);\n  return onMessage$1(messaging, nextOrObserver);\n}\n\n/**\r\n * Firebase Cloud Messaging\r\n *\r\n * @packageDocumentation\r\n */\nregisterMessagingInWindow();\nexport { deleteToken, getMessagingInWindow as getMessaging, getToken, isWindowSupported as isSupported, onMessage };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeG;AAEI,IAAMA,eAAe,GAAG,2BAA2B;AACnD,IAAMC,gBAAgB,GAAG,sCAAsC;AAE/D,IAAMC,iBAAiB,GAC5B,yFAAyF;AAEpF,IAAMC,QAAQ,GAAG,4CAA4C;AAK7D,IAAMC,mBAAmB,GAAG,iBAAiB;AAC7C,IAAMC,qBAAqB,GAAG,gBAAgB;AAC9C,IAAMC,qBAAqB,GAAG,eAAe;AACpD;AACO,IAAMC,kCAAkC,GAAG,cAAc;AAehE,IAAYC,aAGX;AAHD,WAAYA,WAAW;EACrBA,6DAAgB;EAChBA,6EAAwB;AAC1B,CAAC,EAHWA,aAAW,KAAXA,aAAW,GAGtB;;AClDD;;;;;;;;;;;;;AAaG;AAyCH,IAAYA,WAGX;AAHD,WAAYA,WAAW;EACrBA,8CAA+B;EAC/BA,4DAA6C;AAC/C,CAAC,EAHWA,WAAW,KAAXA,WAAW,GAGtB;;ACzDD;;;;;;;;;;;;;;;AAeG;AAEG,SAAUC,aAAa,CAACC,KAA+B;EAC3D,IAAMC,UAAU,GAAG,IAAIC,UAAU,CAACF,KAAK,CAAC;EACxC,IAAMG,YAAY,GAAGC,IAAI,CAACC,MAAM,CAACC,YAAY,OAAnBD,MAAM,qBAAiBJ,UAAU,EAAC,CAAC;EAC7D,OAAOE,YAAY,CAACI,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AAC/E;AAEM,SAAUC,aAAa,CAACL,YAAoB;EAChD,IAAMM,OAAO,GAAG,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,GAAIP,YAAY,CAACQ,MAAM,GAAG,CAAE,IAAI,CAAC,CAAC;EAC/D,IAAMC,MAAM,GAAG,CAACT,YAAY,GAAGM,OAAO,EACnCF,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAErB,IAAMM,OAAO,GAAGC,IAAI,CAACF,MAAM,CAAC;EAC5B,IAAMG,WAAW,GAAG,IAAIb,UAAU,CAACW,OAAO,CAACF,MAAM,CAAC;EAElD,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACF,MAAM,EAAE,EAAEK,CAAC,EAAE;IACvCD,WAAW,CAACC,CAAC,CAAC,GAAGH,OAAO,CAACI,UAAU,CAACD,CAAC,CAAC;EACvC;EACD,OAAOD,WAAW;AACpB;;ACpCA;;;;;;;;;;;;;;;AAeG;AA8CH,IAAMG,WAAW,GAAG,sBAAsB;AAC1C;;;AAGG;AACH,IAAMC,cAAc,GAAG,CAAC;AACxB,IAAMC,qBAAqB,GAAG,wBAAwB;AAAC,SAEjCC,kBAAkB;EAAA;AAAA;AAAA;EAAA,iFAAjC,kBACLC,QAAgB;IAAA;IAAA;MAAA;QAAA;UAAA,MAEZ,WAAW,IAAIC,SAAS;YAAA;YAAA;UAAA;UAAA;UAAA,OAIxBA,SAGD,CAACC,SAAS,EAAE;QAAA;UAJPA,SAAS;UAKTC,OAAO,GAAGD,SAAS,CAACE,GAAG,CAAC,YAAE;YAAA,OAAIC,EAAE,CAACC,IAAI;UAAA,EAAC;UAAA,IAEvCH,OAAO,CAACI,QAAQ,CAACX,WAAW,CAAC;YAAA;YAAA;UAAA;UAAA,kCAEzB,IAAI;QAAA;UAIXY,YAAY,GAAwB,IAAI;UAAA;UAAA,OAE3BC,MAAM,CAACb,WAAW,EAAEC,cAAc,EAAE;YACnDa,OAAO;cAAA,0EAAE,iBAAOL,EAAE,EAAEM,UAAU,EAAEC,UAAU,EAAEC,kBAAkB;gBAAA;gBAAA;kBAAA;oBAAA;sBAAA,MACxDF,UAAU,GAAG,CAAC;wBAAA;wBAAA;sBAAA;sBAAA;oBAAA;sBAAA,IAKbN,EAAE,CAACS,gBAAgB,CAACC,QAAQ,CAACjB,qBAAqB,CAAC;wBAAA;wBAAA;sBAAA;sBAAA;oBAAA;sBAKlDkB,WAAW,GAAGH,kBAAkB,CAACG,WAAW,CAAClB,qBAAqB,CAAC;sBAAA;sBAAA,OACrDkB,WAAW,CAACC,KAAK,CAAC,aAAa,CAAC,CAACC,GAAG,CAAClB,QAAQ,CAAC;oBAAA;sBAA5DmB,KAAK;sBAAA;sBAAA,OACLH,WAAW,CAACI,KAAK,EAAE;oBAAA;sBAAA,IAEpBD,KAAK;wBAAA;wBAAA;sBAAA;sBAAA;oBAAA;sBAAA,MAKNR,UAAU,KAAK,CAAC;wBAAA;wBAAA;sBAAA;sBACZU,UAAU,GAAGF,KAAuB;sBAAA,MAEtC,CAACE,UAAU,CAACC,IAAI,IAAI,CAACD,UAAU,CAACE,MAAM,IAAI,CAACF,UAAU,CAACG,QAAQ;wBAAA;wBAAA;sBAAA;sBAAA;oBAAA;sBAIlEhB,YAAY,GAAG;wBACbiB,KAAK,EAAEJ,UAAU,CAACK,QAAQ;wBAC1BC,UAAU,EAAE,gBAAU,CAACA,UAAU,MAAI,iCAAI,CAACC,GAAG,EAAE;wBAC/CC,mBAAmB,EAAE;0BACnBP,IAAI,EAAED,UAAU,CAACC,IAAI;0BACrBC,MAAM,EAAEF,UAAU,CAACE,MAAM;0BACzBC,QAAQ,EAAEH,UAAU,CAACG,QAAQ;0BAC7BM,OAAO,EAAET,UAAU,CAACS,OAAO;0BAC3BC,QAAQ,EACN,OAAOV,UAAU,CAACU,QAAQ,KAAK,QAAQ,GACnCV,UAAU,CAACU,QAAQ,GACnBtD,aAAa,CAAC4C,UAAU,CAACU,QAAQ;wBACxC;uBACF;sBAAC;sBAAA;oBAAA;sBACG,IAAIpB,UAAU,KAAK,CAAC,EAAE;wBACrBU,WAAU,GAAGF,KAAuB;wBAE1CX,YAAY,GAAG;0BACbiB,KAAK,EAAEJ,WAAU,CAACK,QAAQ;0BAC1BC,UAAU,EAAEN,WAAU,CAACM,UAAU;0BACjCE,mBAAmB,EAAE;4BACnBP,IAAI,EAAE7C,aAAa,CAAC4C,WAAU,CAACC,IAAI,CAAC;4BACpCC,MAAM,EAAE9C,aAAa,CAAC4C,WAAU,CAACE,MAAM,CAAC;4BACxCC,QAAQ,EAAEH,WAAU,CAACG,QAAQ;4BAC7BM,OAAO,EAAET,WAAU,CAACS,OAAO;4BAC3BC,QAAQ,EAAEtD,aAAa,CAAC4C,WAAU,CAACU,QAAQ;0BAC5C;yBACF;sBACF,OAAM,IAAIpB,UAAU,KAAK,CAAC,EAAE;wBACrBU,YAAU,GAAGF,KAAuB;wBAE1CX,YAAY,GAAG;0BACbiB,KAAK,EAAEJ,YAAU,CAACK,QAAQ;0BAC1BC,UAAU,EAAEN,YAAU,CAACM,UAAU;0BACjCE,mBAAmB,EAAE;4BACnBP,IAAI,EAAE7C,aAAa,CAAC4C,YAAU,CAACC,IAAI,CAAC;4BACpCC,MAAM,EAAE9C,aAAa,CAAC4C,YAAU,CAACE,MAAM,CAAC;4BACxCC,QAAQ,EAAEH,YAAU,CAACG,QAAQ;4BAC7BM,OAAO,EAAET,YAAU,CAACS,OAAO;4BAC3BC,QAAQ,EAAEtD,aAAa,CAAC4C,YAAU,CAACU,QAAQ;0BAC5C;yBACF;sBACF;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACF;cAAA;gBAAA;cAAA;cAAA;YAAA;UACF,EAAC;QAAA;UAxEI1B,EAAE;UAyERA,EAAE,CAAC2B,KAAK,EAAE;;;iBAGJC,QAAQ,CAACrC,WAAW,CAAC;QAAA;UAAA;UAAA,OACrBqC,QAAQ,CAAC,sBAAsB,CAAC;QAAA;UAAA;UAAA,OAChCA,QAAQ,CAAC,WAAW,CAAC;QAAA;UAAA,kCAEpBC,iBAAiB,CAAC1B,YAAY,CAAC,GAAGA,YAAY,GAAG,IAAI;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC7D;EAAA;AAAA;AAED,SAAS0B,iBAAiB,CACxB1B,YAAiC;EAEjC,IAAI,CAACA,YAAY,IAAI,CAACA,YAAY,CAACqB,mBAAmB,EAAE;IACtD,OAAO,KAAK;EACb;EACD,IAAQA,mBAAmB,GAAKrB,YAAY,CAApCqB,mBAAmB;EAC3B,OACE,OAAOrB,YAAY,CAACmB,UAAU,KAAK,QAAQ,IAC3CnB,YAAY,CAACmB,UAAU,GAAG,CAAC,IAC3B,OAAOnB,YAAY,CAACiB,KAAK,KAAK,QAAQ,IACtCjB,YAAY,CAACiB,KAAK,CAACpC,MAAM,GAAG,CAAC,IAC7B,OAAOwC,mBAAmB,CAACP,IAAI,KAAK,QAAQ,IAC5CO,mBAAmB,CAACP,IAAI,CAACjC,MAAM,GAAG,CAAC,IACnC,OAAOwC,mBAAmB,CAACN,MAAM,KAAK,QAAQ,IAC9CM,mBAAmB,CAACN,MAAM,CAAClC,MAAM,GAAG,CAAC,IACrC,OAAOwC,mBAAmB,CAACL,QAAQ,KAAK,QAAQ,IAChDK,mBAAmB,CAACL,QAAQ,CAACnC,MAAM,GAAG,CAAC,IACvC,OAAOwC,mBAAmB,CAACC,OAAO,KAAK,QAAQ,IAC/CD,mBAAmB,CAACC,OAAO,CAACzC,MAAM,GAAG,CAAC,IACtC,OAAOwC,mBAAmB,CAACE,QAAQ,KAAK,QAAQ,IAChDF,mBAAmB,CAACE,QAAQ,CAAC1C,MAAM,GAAG,CAAC;AAE3C;;ACpMA;;;;;;;;;;;;;;;AAeG;AAQH;AACO,IAAM8C,aAAa,GAAG,6BAA6B;AAC1D,IAAMC,gBAAgB,GAAG,CAAC;AAC1B,IAAMC,iBAAiB,GAAG,0BAA0B;AASpD,IAAIC,SAAS,GAA8C,IAAI;AAC/D,SAASC,YAAY;EACnB,IAAI,CAACD,SAAS,EAAE;IACdA,SAAS,GAAG7B,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,EAAE;MAClD1B,OAAO,EAAE,iBAAC8B,SAAS,EAAE7B,UAAU,EAAI;;;;;QAKjC,QAAQA,UAAU;UAChB,KAAK,CAAC;YACJ6B,SAAS,CAACC,iBAAiB,CAACJ,iBAAiB,CAAC;QAAC;;IAGtD,EAAC;EACH;EACD,OAAOC,SAAS;AAClB;AAEA;AAAA,SACsBI,KAAK;EAAA;AAAA;AAwB3B;AAAA;EAAA,oEAxBO,kBACLC,oBAAkD;IAAA;IAAA;MAAA;QAAA;UAE5CC,GAAG,GAAGC,MAAM,CAACF,oBAAoB,CAAC;UAAA;UAAA,OACvBJ,YAAY,EAAE;QAAA;UAAzBlC,EAAE;UAAA;UAAA,OACoBA,EAAE,CAC3ByC,WAAW,CAACT,iBAAiB,CAAC,CAC9BrB,WAAW,CAACqB,iBAAiB,CAAC,CAC9BnB,GAAG,CAAC0B,GAAG,CAAC;QAAA;UAHLpC,YAAY;UAAA,KAKdA,YAAY;YAAA;YAAA;UAAA;UAAA,kCACPA,YAAY;QAAA;UAAA;UAAA,OAGWT,kBAAkB,CAC9C4C,oBAAoB,CAACI,SAAS,CAAC/C,QAAQ,CACxC;QAAA;UAFKgD,eAAe;UAAA,KAGjBA,eAAe;YAAA;YAAA;UAAA;UAAA;UAAA,OACXC,KAAK,CAACN,oBAAoB,EAAEK,eAAe,CAAC;QAAA;UAAA,kCAC3CA,eAAe;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAG3B;EAAA;AAAA;AAAA,SAGqBC,KAAK;EAAA;AAAA;AAY3B;AAAA;EAAA,oEAZO,kBACLN,oBAAkD,EAClDnC,YAA0B;IAAA;IAAA;MAAA;QAAA;UAEpBoC,GAAG,GAAGC,MAAM,CAACF,oBAAoB,CAAC;UAAA;UAAA,OACvBJ,YAAY,EAAE;QAAA;UAAzBlC,EAAE;UACF6C,EAAE,GAAG7C,EAAE,CAACyC,WAAW,CAACT,iBAAiB,EAAE,WAAW,CAAC;UAAA;UAAA,OACnDa,EAAE,CAAClC,WAAW,CAACqB,iBAAiB,CAAC,CAACc,GAAG,CAAC3C,YAAY,EAAEoC,GAAG,CAAC;QAAA;UAAA;UAAA,OACxDM,EAAE,CAACE,IAAI;QAAA;UAAA,kCACN5C,YAAY;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACpB;EAAA;AAAA;AAAA,SAGqB6C,QAAQ;EAAA;AAAA;AAAA;EAAA,uEAAvB,kBACLV,oBAAkD;IAAA;IAAA;MAAA;QAAA;UAE5CC,GAAG,GAAGC,MAAM,CAACF,oBAAoB,CAAC;UAAA;UAAA,OACvBJ,YAAY,EAAE;QAAA;UAAzBlC,EAAE;UACF6C,EAAE,GAAG7C,EAAE,CAACyC,WAAW,CAACT,iBAAiB,EAAE,WAAW,CAAC;UAAA;UAAA,OACnDa,EAAE,CAAClC,WAAW,CAACqB,iBAAiB,CAAC,CAACiB,MAAM,CAACV,GAAG,CAAC;QAAA;UAAA;UAAA,OAC7CM,EAAE,CAACE,IAAI;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACd;EAAA;AAAA;AAWD,SAASP,MAAM,OAA4C;EAAA,IAAzCE,SAAS,QAATA,SAAS;EACzB,OAAOA,SAAS,CAACQ,KAAK;AACxB;;AClHA;;;;;;;;;;;;;;;AAeG;AAyBI,IAAMC,SAAS,iDACpB,uEACE,iDAAiD,+BACnD,gEACE,+CAA+C,+BACjD,wDACE,uDAAuD,+BACzD,yDACE,oEAAoE,+BACtE,yDACE,kEAAkE,+BACpE,2DACE,0EAA0E,+BAC5E,iEACE,kGAAkG,+BACpG,kFACE,8EAA8E,+BAChF,iEACE,oEAAoE,+BACtE,qEACE,0DAA0D,+BAC5D,qEACE,6CAA6C,GAC7C,6BAA6B,+BAC/B,2DACE,mEAAmE,+BACrE,+DACE,uDAAuD,+BACzD,iEACE,oEAAoE,GACpE,yEAAyE,+BAC3E,mEACE,sEAAsE,+BACxE,yDACE,gEAAgE,+BAClE,uDAA+B,wCAAwC,+BACvE,+EACE,qEAAqE,GACrE,oEAAoE,cACvE;AAYM,IAAMC,aAAa,GAAG,IAAIC,YAAY,CAC3C,WAAW,EACX,WAAW,EACXF,SAAS,CACV;;AC/FD;;;;;;;;;;;;;;;AAeG;AAfH,SAsCsBG,eAAe;EAAA;AAAA;AAAA;EAAA,8EAA9B,kBACLhB,oBAAkD,EAClDd,mBAAwC;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAElB+B,UAAU,CAACjB,oBAAoB,CAAC;QAAA;UAAhDkB,OAAO;UACPC,IAAI,GAAGC,OAAO,CAAClC,mBAAmB,CAAC;UAEnCmC,gBAAgB,GAAG;YACvBC,MAAM,EAAE,MAAM;YACdJ,OAAO,EAAPA,OAAO;YACPC,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;WAC1B;UAAA;UAAA;UAAA,OAIwBM,KAAK,CAC1BC,WAAW,CAAC1B,oBAAoB,CAACI,SAAS,CAAC,EAC3CiB,gBAAgB,CACjB;QAAA;UAHKM,QAAQ;UAAA;UAAA,OAIOA,QAAQ,CAACC,IAAI,EAAE;QAAA;UAApCC,YAAY;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA,MAENf,aAAa,CAACgB,MAAM,CAAmC;YAC3DC,SAAS,EAAG,0CAAG,kBAAH,aAAeC,QAAQ;UACpC,EAAC;QAAA;UAAA,KAGAH,YAAY,CAACI,KAAK;YAAA;YAAA;UAAA;UACdC,OAAO,GAAGL,YAAY,CAACI,KAAK,CAACC,OAAO;UAAA,MACpCpB,aAAa,CAACgB,MAAM,CAAmC;YAC3DC,SAAS,EAAEG;UACZ,EAAC;QAAA;UAAA,IAGCL,YAAY,CAAC/C,KAAK;YAAA;YAAA;UAAA;UAAA,MACfgC,aAAa,CAACgB,MAAM,qEAAoC;QAAA;UAAA,kCAGzDD,YAAY,CAAC/C,KAAK;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC1B;EAAA;AAAA;AAAA,SAEqBqD,kBAAkB;EAAA;AAAA;AAAA;EAAA,iFAAjC,kBACLnC,oBAAkD,EAClDnC,YAA0B;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAEJoD,UAAU,CAACjB,oBAAoB,CAAC;QAAA;UAAhDkB,OAAO;UACPC,IAAI,GAAGC,OAAO,CAACvD,YAAY,CAACqB,mBAAoB,CAAC;UAEjDkD,aAAa,GAAG;YACpBd,MAAM,EAAE,OAAO;YACfJ,OAAO,EAAPA,OAAO;YACPC,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;WAC1B;UAAA;UAAA;UAAA,OAIwBM,KAAK,WACvBC,WAAW,CAAC1B,oBAAoB,CAACI,SAAS,CAAC,cAAIvC,YAAY,CAACiB,KAAK,GACpEsD,aAAa,CACd;QAAA;UAHKT,QAAQ;UAAA;UAAA,OAIOA,QAAQ,CAACC,IAAI,EAAE;QAAA;UAApCC,YAAY;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA,MAENf,aAAa,CAACgB,MAAM,CAAgC;YACxDC,SAAS,EAAG,0CAAG,kBAAH,aAAeC,QAAQ;UACpC,EAAC;QAAA;UAAA,KAGAH,YAAY,CAACI,KAAK;YAAA;YAAA;UAAA;UACdC,OAAO,GAAGL,YAAY,CAACI,KAAK,CAACC,OAAO;UAAA,MACpCpB,aAAa,CAACgB,MAAM,CAAgC;YACxDC,SAAS,EAAEG;UACZ,EAAC;QAAA;UAAA,IAGCL,YAAY,CAAC/C,KAAK;YAAA;YAAA;UAAA;UAAA,MACfgC,aAAa,CAACgB,MAAM,+DAAiC;QAAA;UAAA,kCAGtDD,YAAY,CAAC/C,KAAK;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC1B;EAAA;AAAA;AAAA,SAEqBuD,kBAAkB;EAAA;AAAA;AAAA;EAAA,iFAAjC,kBACLrC,oBAAkD,EAClDlB,KAAa;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAESmC,UAAU,CAACjB,oBAAoB,CAAC;QAAA;UAAhDkB,OAAO;UAEPoB,kBAAkB,GAAG;YACzBhB,MAAM,EAAE,QAAQ;YAChBJ,OAAO,EAAPA;WACD;UAAA;UAAA;UAAA,OAGwBO,KAAK,WACvBC,WAAW,CAAC1B,oBAAoB,CAACI,SAAS,CAAC,cAAItB,KAAK,GACvDwD,kBAAkB,CACnB;QAAA;UAHKX,QAAQ;UAAA;UAAA,OAI0BA,QAAQ,CAACC,IAAI,EAAE;QAAA;UAAjDC,YAAY;UAAA,KACdA,YAAY,CAACI,KAAK;YAAA;YAAA;UAAA;UACdC,OAAO,GAAGL,YAAY,CAACI,KAAK,CAACC,OAAO;UAAA,MACpCpB,aAAa,CAACgB,MAAM,CAAqC;YAC7DC,SAAS,EAAEG;UACZ,EAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA,MAGEpB,aAAa,CAACgB,MAAM,CAAqC;YAC7DC,SAAS,EAAG,0CAAG,kBAAH,aAAeC,QAAQ;UACpC,EAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAEL;EAAA;AAAA;AAED,SAASN,WAAW,QAAyB;EAAA,IAAtBa,SAAS,SAATA,SAAS;EAC9B,iBAAU/G,QAAQ,uBAAa+G,SAAU;AAC3C;AAAC,SAEctB,UAAU;EAAA;AAAA;AAAA;EAAA,yEAAzB;IAAA;IAAA;MAAA;QAAA;UACEb,SAAS,SAATA,SAAS,EACToC,aAAa,SAAbA,aAAa;UAAA;UAAA,OAEWA,aAAa,CAACC,QAAQ,EAAE;QAAA;UAA1CC,SAAS;UAAA,kCAER,IAAIC,OAAO,CAAC;YACjB,cAAc,EAAE,kBAAkB;YAClCC,MAAM,EAAE,kBAAkB;YAC1B,gBAAgB,EAAExC,SAAS,CAACyC,MAAO;YACnC,oCAAoC,gBAASH,SAAS;UACvD,EAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACH;EAAA;AAAA;AAED,SAAStB,OAAO,QAKM;EAAA,IAJpBxC,MAAM,SAANA,MAAM;IACND,IAAI,SAAJA,IAAI;IACJE,QAAQ,SAARA,QAAQ;IACRO,QAAQ,SAARA,QAAQ;EAER,IAAM+B,IAAI,GAAmB;IAC3B2B,GAAG,EAAE;MACHjE,QAAQ,EAARA,QAAQ;MACRF,IAAI,EAAJA,IAAI;MACJC,MAAM,EAANA;IACD;GACF;EAED,IAAIQ,QAAQ,KAAK7D,iBAAiB,EAAE;IAClC4F,IAAI,CAAC2B,GAAG,CAACC,iBAAiB,GAAG3D,QAAQ;EACtC;EAED,OAAO+B,IAAI;AACb;;ACzLA;;;;;;;;;;;;;;;AAeG;AAiBH;AACA,IAAM6B,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AAAA,SAE9BC,gBAAgB;EAAA;AAAA;AAgDtC;;;AAGG;AAHH;EAAA,+EAhDO,mBACLC,SAA2B;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAEIC,mBAAmB,CAChDD,SAAS,CAACE,cAAe,EACzBF,SAAS,CAAC9D,QAAS,CACpB;QAAA;UAHKiE,gBAAgB;UAKhBnE,mBAAmB,GAAwB;YAC/CE,QAAQ,EAAE8D,SAAS,CAAC9D,QAAS;YAC7BD,OAAO,EAAE+D,SAAS,CAACE,cAAe,CAACE,KAAK;YACxCzE,QAAQ,EAAEwE,gBAAgB,CAACxE,QAAQ;YACnCF,IAAI,EAAE7C,aAAa,CAACuH,gBAAgB,CAACnD,MAAM,CAAC,MAAM,CAAE,CAAC;YACrDtB,MAAM,EAAE9C,aAAa,CAACuH,gBAAgB,CAACnD,MAAM,CAAC,QAAQ,CAAE;WACzD;UAAA;UAAA,OAE0BH,KAAK,CAACmD,SAAS,CAAClD,oBAAoB,CAAC;QAAA;UAA1DnC,YAAY;UAAA,IACbA,YAAY;YAAA;YAAA;UAAA;UAAA,mCAER0F,WAAW,CAACL,SAAS,CAAClD,oBAAoB,EAAEd,mBAAmB,CAAC;QAAA;UAAA,IAEtEsE,YAAY,CAAC3F,YAAY,CAACqB,mBAAoB,EAAEA,mBAAmB,CAAC;YAAA;YAAA;UAAA;UAAA;UAAA;UAAA,OAI7DmD,kBAAkB,CACtBa,SAAS,CAAClD,oBAAqB,EAC/BnC,YAAY,CAACiB,KAAK,CACnB;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;;UAGD2E,OAAO,CAACC,IAAI,eAAG;QAAC;UAAA,mCAGXH,WAAW,CAACL,SAAS,CAAClD,oBAAqB,EAAEd,mBAAmB,CAAC;QAAA;UAAA,MAC/DyE,IAAI,CAAC1E,GAAG,EAAE,IAAIpB,YAAY,CAACmB,UAAU,GAAGgE,mBAAmB;YAAA;YAAA;UAAA;UAAA,mCAE7DY,WAAW,CAACV,SAAS,EAAE;YAC5BpE,KAAK,EAAEjB,YAAY,CAACiB,KAAK;YACzBE,UAAU,EAAE2E,IAAI,CAAC1E,GAAG,EAAE;YACtBC,mBAAmB,EAAnBA;UACD,EAAC;QAAA;UAAA,mCAGKrB,YAAY,CAACiB,KAAK;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAE5B;EAAA;AAAA;AAAA,SAMqB+E,mBAAmB;EAAA;AAAA;AAAA;EAAA,kFAAlC,mBACLX,SAA2B;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAEAnD,KAAK,CAACmD,SAAS,CAAClD,oBAAoB,CAAC;QAAA;UAA1DnC,YAAY;UAAA,KACdA,YAAY;YAAA;YAAA;UAAA;UAAA;UAAA,OACRwE,kBAAkB,CACtBa,SAAS,CAAClD,oBAAoB,EAC9BnC,YAAY,CAACiB,KAAK,CACnB;QAAA;UAAA;UAAA,OACK4B,QAAQ,CAACwC,SAAS,CAAClD,oBAAoB,CAAC;QAAA;UAAA;UAAA,OAKxCkD,SAAS,CAACE,cAAe,CAACU,WAAW,CAACC,eAAe,EAAE;QAAA;UADzDV,gBAAgB;UAAA,KAElBA,gBAAgB;YAAA;YAAA;UAAA;UAAA,mCACXA,gBAAgB,CAACW,WAAW,EAAE;QAAA;UAAA,mCAIhC,IAAI;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACZ;EAAA;AAAA;AAAA,SAEcJ,WAAW;EAAA;AAAA;AAAA;EAAA,0EAA1B,mBACEV,SAA2B,EAC3BrF,YAA0B;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,OAGGsE,kBAAkB,CAC3Ce,SAAS,CAAClD,oBAAoB,EAC9BnC,YAAY,CACb;QAAA;UAHKoG,YAAY;UAKZC,mBAAmB,mCACpBrG,YAAY;YACfiB,KAAK,EAAEmF,YAAY;YACnBjF,UAAU,EAAE2E,IAAI,CAAC1E,GAAG;UAAE,EACvB;UAAA;UAAA,OAEKqB,KAAK,CAAC4C,SAAS,CAAClD,oBAAoB,EAAEkE,mBAAmB,CAAC;QAAA;UAAA,mCACzDD,YAAY;QAAA;UAAA;UAAA;UAAA;UAAA,OAEbJ,mBAAmB,CAACX,SAAS,CAAC;QAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAGvC;EAAA;AAAA;AAAA,SAEcK,WAAW;EAAA;AAAA;AAiB1B;;AAEG;AAFH;EAAA,0EAjBA,mBACEvD,oBAAkD,EAClDd,mBAAwC;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAEpB8B,eAAe,CACjChB,oBAAoB,EACpBd,mBAAmB,CACpB;QAAA;UAHKJ,KAAK;UAILjB,YAAY,GAAiB;YACjCiB,KAAK,EAALA,KAAK;YACLE,UAAU,EAAE2E,IAAI,CAAC1E,GAAG,EAAE;YACtBC,mBAAmB,EAAnBA;WACD;UAAA;UAAA,OACKoB,KAAK,CAACN,oBAAoB,EAAEnC,YAAY,CAAC;QAAA;UAAA,mCACxCA,YAAY,CAACiB,KAAK;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC1B;EAAA;AAAA;AAAA,SAKcqE,mBAAmB;EAAA;AAAA;AAiBlC;;AAEG;AAFH;EAAA,kFAjBA,mBACEC,cAAyC,EACzChE,QAAgB;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA,OAEWgE,cAAc,CAACU,WAAW,CAACC,eAAe,EAAE;QAAA;UAAjEI,YAAY;UAAA,KACdA,YAAY;YAAA;YAAA;UAAA;UAAA,mCACPA,YAAY;QAAA;UAAA,mCAGdf,cAAc,CAACU,WAAW,CAACM,SAAS,CAAC;YAC1CC,eAAe,EAAE,IAAI;;;YAGrBC,oBAAoB,EAAE/H,aAAa,CAAC6C,QAAQ;UAC7C,EAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACH;EAAA;AAAA;AAKD,SAASoE,YAAY,CACnBe,SAA8B,EAC9BC,cAAmC;EAEnC,IAAMC,eAAe,GAAGD,cAAc,CAACpF,QAAQ,KAAKmF,SAAS,CAACnF,QAAQ;EACtE,IAAMsF,eAAe,GAAGF,cAAc,CAAC3F,QAAQ,KAAK0F,SAAS,CAAC1F,QAAQ;EACtE,IAAM8F,WAAW,GAAGH,cAAc,CAAC7F,IAAI,KAAK4F,SAAS,CAAC5F,IAAI;EAC1D,IAAMiG,aAAa,GAAGJ,cAAc,CAAC5F,MAAM,KAAK2F,SAAS,CAAC3F,MAAM;EAEhE,OAAO6F,eAAe,IAAIC,eAAe,IAAIC,WAAW,IAAIC,aAAa;AAC3E;;ACxLA;;;;;;;;;;;;;;;AAeG;AAKG,SAAUC,kBAAkB,CAChCC,eAAuC;EAEvC,IAAMC,OAAO,GAAmB;IAC9BC,IAAI,EAAEF,eAAe,CAACE,IAAI;;IAE1BC,WAAW,EAAEH,eAAe,CAACI,YAAY;;IAEzCC,SAAS,EAAEL,eAAe,CAACM;GACV;EAEnBC,4BAA4B,CAACN,OAAO,EAAED,eAAe,CAAC;EACtDQ,oBAAoB,CAACP,OAAO,EAAED,eAAe,CAAC;EAC9CS,mBAAmB,CAACR,OAAO,EAAED,eAAe,CAAC;EAE7C,OAAOC,OAAO;AAChB;AAEA,SAASM,4BAA4B,CACnCN,OAAuB,EACvBS,sBAA8C;EAE9C,IAAI,CAACA,sBAAsB,CAACC,YAAY,EAAE;IACxC;EACD;EAEDV,OAAO,CAACU,YAAY,GAAG,EAAE;EAEzB,IAAMC,KAAK,GAAGF,sBAAsB,CAACC,YAAa,CAACC,KAAK;EACxD,IAAI,CAAC,CAACA,KAAK,EAAE;IACXX,OAAO,CAACU,YAAa,CAACC,KAAK,GAAGA,KAAK;EACpC;EAED,IAAMvE,IAAI,GAAGqE,sBAAsB,CAACC,YAAa,CAACtE,IAAI;EACtD,IAAI,CAAC,CAACA,IAAI,EAAE;IACV4D,OAAO,CAACU,YAAa,CAACtE,IAAI,GAAGA,IAAI;EAClC;EAED,IAAMwE,KAAK,GAAGH,sBAAsB,CAACC,YAAa,CAACE,KAAK;EACxD,IAAI,CAAC,CAACA,KAAK,EAAE;IACXZ,OAAO,CAACU,YAAa,CAACE,KAAK,GAAGA,KAAK;EACpC;EAED,IAAMC,IAAI,GAAGJ,sBAAsB,CAACC,YAAa,CAACG,IAAI;EACtD,IAAI,CAAC,CAACA,IAAI,EAAE;IACVb,OAAO,CAACU,YAAa,CAACG,IAAI,GAAGA,IAAI;EAClC;AACH;AAEA,SAASN,oBAAoB,CAC3BP,OAAuB,EACvBS,sBAA8C;EAE9C,IAAI,CAACA,sBAAsB,CAACK,IAAI,EAAE;IAChC;EACD;EAEDd,OAAO,CAACc,IAAI,GAAGL,sBAAsB,CAACK,IAAiC;AACzE;AAEA,SAASN,mBAAmB,CAC1BR,OAAuB,EACvBS,sBAA8C;;;EAG9C,IACE,CAACA,sBAAsB,CAACM,UAAU,IAClC,EAAC,4BAAsB,CAACL,YAAY,MAAE,gDAAY,GAClD;IACA;EACD;EAEDV,OAAO,CAACe,UAAU,GAAG,EAAE;EAEvB,IAAMC,IAAI,GACR,kCAAsB,CAACD,UAAU,0CAAEC,IAAI,mCACvC,4BAAsB,CAACN,YAAY,0CAAEO,YAAY;EAEnD,IAAI,CAAC,CAACD,IAAI,EAAE;IACVhB,OAAO,CAACe,UAAW,CAACC,IAAI,GAAGA,IAAI;EAChC;;EAGD,IAAME,cAAc,GAAG,4BAAsB,CAACH,UAAU,0CAAEI,eAAe;EACzE,IAAI,CAAC,CAACD,cAAc,EAAE;IACpBlB,OAAO,CAACe,UAAW,CAACG,cAAc,GAAGA,cAAc;EACpD;AACH;;AC3GA;;;;;;;;;;;;;;;AAeG;AAKG,SAAUE,gBAAgB,CAACN,IAAa;;EAE5C,OAAO,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAAC,CAACA,IAAI,IAAIpK,mBAAmB,IAAIoK,IAAI;AAC1E;;ACvBA;;;;;;;;;;;;;;;AAeG;AAsBsBO,aAAa,CACpC,kCAAkC,EAClC,iCAAiC;AAGTA,aAAa,CACrC,sBAAsB,EACtB,qBAAqB;AA6LP,sBAAa,CAACC,EAAU,EAAEC,EAAU;EAClD,IAAMC,WAAW,GAAG,EAAE;EACtB,KAAK,IAAIxJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsJ,EAAE,CAAC3J,MAAM,EAAEK,CAAC,EAAE,EAAE;IAClCwJ,WAAW,CAACC,IAAI,CAACH,EAAE,CAACI,MAAM,CAAC1J,CAAC,CAAC,CAAC;IAC9B,IAAIA,CAAC,GAAGuJ,EAAE,CAAC5J,MAAM,EAAE;MACjB6J,WAAW,CAACC,IAAI,CAACF,EAAE,CAACG,MAAM,CAAC1J,CAAC,CAAC,CAAC;IAC/B;EACF;EAED,OAAOwJ,WAAW,CAACG,IAAI,CAAC,EAAE,CAAC;AAC7B;;ACnPA;;;;;;;;;;;;;;;AAeG;AAQG,SAAUC,gBAAgB,CAACC,GAAgB;EAC/C,IAAI,CAACA,GAAG,IAAI,CAACA,GAAG,CAACC,OAAO,EAAE;IACxB,MAAMC,oBAAoB,CAAC,0BAA0B,CAAC;EACvD;EAED,IAAI,CAACF,GAAG,CAACjJ,IAAI,EAAE;IACb,MAAMmJ,oBAAoB,CAAC,UAAU,CAAC;EACvC;;EAGD,IAAMC,UAAU,GAAyC,CACvD,WAAW,EACX,QAAQ,EACR,OAAO,EACP,mBAAmB,CACpB;EAED,IAAQF,OAAO,GAAKD,GAAG,CAAfC,OAAO;EACf,+BAAsBE,UAAU,iCAAE;IAA7B,IAAMC,OAAO;IAChB,IAAI,CAACH,OAAO,CAACG,OAAO,CAAC,EAAE;MACrB,MAAMF,oBAAoB,CAACE,OAAO,CAAC;IACpC;EACF;EAED,OAAO;IACLC,OAAO,EAAEL,GAAG,CAACjJ,IAAI;IACjB4E,SAAS,EAAEsE,OAAO,CAACtE,SAAU;IAC7BM,MAAM,EAAEgE,OAAO,CAAChE,MAAO;IACvBjC,KAAK,EAAEiG,OAAO,CAACjG,KAAM;IACrBvD,QAAQ,EAAEwJ,OAAO,CAACK;GACnB;AACH;AAEA,SAASJ,oBAAoB,CAACK,SAAiB;EAC7C,OAAOrG,aAAa,CAACgB,MAAM,CAAsC;IAC/DqF,SAAS,EAATA;EACD,EAAC;AACJ;;AC5DA;;;;;;;;;;;;;;;AAeG;AAfH,IA2BaC,gBAAgB;EAoB3B,0BACER,GAAgB,EAChBpE,aAA6C,EAC7C6E,iBAA0D;IAAA;;IAhB5D,IAAwC,4CAAY,KAAK;IAEzD,IAA0B,8BAGf,IAAI;IAEf,IAAgB,oBACd,IAAI;IAEN,IAAS,aAAe,EAAE;IAC1B,IAAmB,uBAAY,KAAK;IAOlC,IAAMjH,SAAS,GAAGuG,gBAAgB,CAACC,GAAG,CAAC;IAEvC,IAAI,CAAC5G,oBAAoB,GAAG;MAC1B4G,GAAG,EAAHA,GAAG;MACHxG,SAAS,EAATA,SAAS;MACToC,aAAa,EAAbA,aAAa;MACb6E,iBAAiB,EAAjBA;KACD;;EACF;IAAA;IAAA,OAED,mBAAO;MACL,OAAOC,OAAO,CAACC,OAAO,EAAE;;EACzB;EAAA;AAAA;AChEH;;;;;;;;;;;;;;;AAeG;AAfH,SAsBsBC,iBAAiB;EAAA;AAAA;ACtBvC;;;;;;;;;;;;;;;AAeG;AAfH;EAAA,gFDsBO,mBACLtE,SAA2B;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,OAGQuE,SAAS,CAACC,aAAa,CAACC,QAAQ,CAC/DtM,eAAe,EACf;YACEiI,KAAK,EAAEhI;UACR,EACF;QAAA;UALD4H,SAAS,CAACE,cAAc;;;;;;UAYxBF,SAAS,CAACE,cAAc,CAACwE,MAAM,EAAE,CAACC,KAAK,CAAC,YAAK;;WAE5C,CAAC;UAAC;UAAA;QAAA;UAAA;UAAA;UAAA,MAEG/G,aAAa,CAACgB,MAAM,CAAwC;YAChEgG,mBAAmB,EAAG,kBAAW,QAAX,kDAAa5F;UACpC,EAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAEN;EAAA;AAAA;AAAA,SCxBsB6F,WAAW;EAAA;AAAA;ACtBjC;;;;;;;;;;;;;;;AAeG;AAfH;EAAA,0EDsBO,mBACL7E,SAA2B,EAC3BE,cAAsD;IAAA;MAAA;QAAA;UAAA,MAElD,CAACA,cAAc,IAAI,CAACF,SAAS,CAACE,cAAc;YAAA;YAAA;UAAA;UAAA;UAAA,OACxCoE,iBAAiB,CAACtE,SAAS,CAAC;QAAA;UAAA,MAGhC,CAACE,cAAc,IAAI,CAAC,CAACF,SAAS,CAACE,cAAc;YAAA;YAAA;UAAA;UAAA;QAAA;UAAA,IAI3CA,cAAc,YAAY4E,yBAAyB;YAAA;YAAA;UAAA;UAAA,MACjDlH,aAAa,CAACgB,MAAM,mEAAmC;QAAA;UAG/DoB,SAAS,CAACE,cAAc,GAAGA,cAAc;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CAC5C;EAAA;AAAA;AAAA,SCnBsB6E,cAAc;EAAA;AAAA;ACpBpC;;;;;;;;;;;;;;;AAeG;AAfH;EAAA,6EDoBO,mBACL/E,SAA2B,EAC3B9D,QAA6B;IAAA;MAAA;QAAA;UAE7B,IAAI,CAAC,CAACA,QAAQ,EAAE;YACd8D,SAAS,CAAC9D,QAAQ,GAAGA,QAAQ;UAC9B,OAAM,IAAI,CAAC8D,SAAS,CAAC9D,QAAQ,EAAE;YAC9B8D,SAAS,CAAC9D,QAAQ,GAAG7D,iBAAiB;UACvC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACH;EAAA;AAAA;AAAA,SCJsBkH,UAAQ;EAAA;AAAA;ACzB9B;;;;;;;;;;;;;;;AAeG;AAfH;EAAA,wEDyBO,mBACLS,SAA2B,EAC3B2D,OAAyB;IAAA;MAAA;QAAA;UAAA,IAEpBY,SAAS;YAAA;YAAA;UAAA;UAAA,MACN3G,aAAa,CAACgB,MAAM,gEAA+B;QAAA;UAAA,MAGvDoG,YAAY,CAACC,UAAU,KAAK,SAAS;YAAA;YAAA;UAAA;UAAA;UAAA,OACjCD,YAAY,CAACE,iBAAiB,EAAE;QAAA;UAAA,MAGpCF,YAAY,CAACC,UAAU,KAAK,SAAS;YAAA;YAAA;UAAA;UAAA,MACjCrH,aAAa,CAACgB,MAAM,yDAA8B;QAAA;UAAA;UAAA,OAGpDmG,cAAc,CAAC/E,SAAS,EAAE2D,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEzH,QAAQ,CAAC;QAAA;UAAA;UAAA,OAC5C2I,WAAW,CAAC7E,SAAS,EAAE2D,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEwB,yBAAyB,CAAC;QAAA;UAAA,mCAEzDpF,gBAAgB,CAACC,SAAS,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACpC;EAAA;AAAA;AAAA,SChBsBoF,UAAU;EAAA;AAAA;AAAA;EAAA,yEAAzB,mBACLpF,SAA2B,EAC3BqF,WAAwB,EACxB1C,IAAwB;IAAA;IAAA;MAAA;QAAA;UAElB2C,SAAS,GAAGC,YAAY,CAACF,WAAW,CAAC;UAAA;UAAA,OAEnCrF,SAAS,CAAClD,oBAAoB,CAACqH,iBAAiB,CAAC9I,GAAG,EAAE;QAAA;UADxDmK,SAAS;UAEfA,SAAS,CAACC,QAAQ,CAACH,SAAS,EAAE;;YAE5BI,UAAU,EAAE/C,IAAI,CAACpK,mBAAmB,CAAC;YACrCoN,YAAY,EAAEhD,IAAI,CAACnK,qBAAqB,CAAC;YACzCoN,YAAY,EAAEjD,IAAI,CAAClK,qBAAqB,CAAC;YACzCoN,mBAAmB,EAAEC,IAAI,CAACC,KAAK,CAACtF,IAAI,CAAC1E,GAAG,EAAE,GAAG,IAAI;;UAElD,EAAC;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CACJ;EAAA;AAAA;AAED,SAASwJ,YAAY,CAACF,WAAwB;EAC5C,QAAQA,WAAW;IACjB,KAAK1M,WAAW,CAACqN,oBAAoB;MACnC,OAAO,mBAAmB;IAC5B,KAAKrN,WAAW,CAACsN,aAAa;MAC5B,OAAO,yBAAyB;IAClC;MACE,MAAM,IAAIC,KAAK,EAAE;EAAC;AAExB;;ACxDA;;;;;;;;;;;;;;;AAeG;AAfH,SA4BsBC,oBAAoB;EAAA;AAAA;AAAA;EAAA,mFAAnC,mBACLnG,SAA2B,EAC3BoG,KAAmB;IAAA;IAAA;MAAA;QAAA;UAEbxE,eAAe,GAAGwE,KAAK,CAACzD,IAA8B;UAAA,IAEvDf,eAAe,CAACyE,mBAAmB;YAAA;YAAA;UAAA;UAAA;QAAA;UAIxC,IACErG,SAAS,CAACsG,gBAAgB,IAC1B1E,eAAe,CAACyD,WAAW,KAAK1M,WAAW,CAACsN,aAAa,EACzD;YACA,IAAI,OAAOjG,SAAS,CAACsG,gBAAgB,KAAK,UAAU,EAAE;cACpDtG,SAAS,CAACsG,gBAAgB,CAAC3E,kBAAkB,CAACC,eAAe,CAAC,CAAC;YAChE,OAAM;cACL5B,SAAS,CAACsG,gBAAgB,CAACC,IAAI,CAAC5E,kBAAkB,CAACC,eAAe,CAAC,CAAC;YACrE;UACF;;UAGK4E,WAAW,GAAG5E,eAAe,CAACe,IAAI;UAAA,MAEtCM,gBAAgB,CAACuD,WAAW,CAAC,IAC7BA,WAAW,CAAC9N,kCAAkC,CAAC,KAAK,GAAG;YAAA;YAAA;UAAA;UAAA;UAAA,OAEjD0M,UAAU,CAACpF,SAAS,EAAE4B,eAAe,CAACyD,WAAY,EAAEmB,WAAW,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAE1E;EAAA;AAAA;;;;ACzDA;;;;;;;;;;;;;;;AAeG;AAwBH,IAAMC,sBAAsB,GAAiC,SAAvDA,sBAAsB,CAC1BC,SAA6B,EAC3B;EACF,IAAM1G,SAAS,GAAG,IAAIkE,gBAAgB,CACpCwC,SAAS,CAACC,WAAW,CAAC,KAAK,CAAC,CAACC,YAAY,EAAE,EAC3CF,SAAS,CAACC,WAAW,CAAC,wBAAwB,CAAC,CAACC,YAAY,EAAE,EAC9DF,SAAS,CAACC,WAAW,CAAC,oBAAoB,CAAC,CAC5C;EAEDpC,SAAS,CAACC,aAAa,CAACqC,gBAAgB,CAAC,SAAS,EAAE,WAAC;IAAA,OACnDV,oBAAoB,CAACnG,SAA6B,EAAE8G,CAAC,CAAC;EAAA,EACvD;EAED,OAAO9G,SAAS;AAClB,CAAC;AAED,IAAM+G,8BAA8B,GAA0C,SAAxEA,8BAA8B,CAClCL,SAA6B,EAC3B;EACF,IAAM1G,SAAS,GAAG0G,SAAS,CACxBC,WAAW,CAAC,WAAW,CAAC,CACxBC,YAAY,EAAsB;EAErC,IAAMI,iBAAiB,GAAsB;IAC3CzH,QAAQ,EAAE,kBAACoE,OAAyB;MAAA,OAAKpE,UAAQ,CAACS,SAAS,EAAE2D,OAAO,CAAC;IAAA;GACtE;EAED,OAAOqD,iBAAiB;AAC1B,CAAC;SAyBeC,yBAAyB;EACvCC,kBAAkB,CAChB,IAAIC,SAAS,CAAC,WAAW,EAAEV,sBAAsB,EAAuB,qCACzE;EAEDS,kBAAkB,CAChB,IAAIC,SAAS,CACX,oBAAoB,EACpBJ,8BAA8B,EAE/B,uCACF;EAEDK,eAAe,CAAC3M,IAAI,EAAE4M,OAAO,CAAC;;EAE9BD,eAAe,CAAC3M,IAAI,EAAE4M,OAAO,EAAE,SAAkB,CAAC;AACpD;;AC5GA;;;;;;;;;;;;;;;AAeG;AAQH;;;;;AAKG;AALH,SAMsBC,iBAAiB;EAAA;AAAA;AC7BvC;;;;;;;;;;;;;;;AAeG;AAfH;EAAA,gFD6BO;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,OAIGC,yBAAyB,EAAE;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA,mCAE1B,KAAK;QAAA;UAAA,mCAMZ,OAAOC,MAAM,KAAK,WAAW,IAC7BC,oBAAoB,EAAE,IACtBC,iBAAiB,EAAE,IACnB,eAAe,IAAInD,SAAS,IAC5B,aAAa,IAAIiD,MAAM,IACvB,cAAc,IAAIA,MAAM,IACxB,OAAO,IAAIA,MAAM,IACjB1C,yBAAyB,CAAC6C,SAAS,CAACC,cAAc,CAAC,kBAAkB,CAAC,IACtEC,gBAAgB,CAACF,SAAS,CAACC,cAAc,CAAC,QAAQ,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAEvD;EAAA;AAAA;AAAA,SC5BsBE,aAAW;EAAA;AAAA;ACvBjC;;;;;;;;;;;;;;;AAeG;AAfH;EAAA,2EDuBO,mBACL9H,SAA2B;IAAA;MAAA;QAAA;UAAA,IAEtBuE,SAAS;YAAA;YAAA;UAAA;UAAA,MACN3G,aAAa,CAACgB,MAAM,gEAA+B;QAAA;UAAA,IAGtDoB,SAAS,CAACE,cAAc;YAAA;YAAA;UAAA;UAAA;UAAA,OACrBoE,iBAAiB,CAACtE,SAAS,CAAC;QAAA;UAAA,mCAG7BW,mBAAmB,CAACX,SAAS,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACvC;EAAA;AAAA;ACRgB,oBAAS,CACvBA,SAA2B,EAC3B+H,cAAiE;EAEjE,IAAI,CAACxD,SAAS,EAAE;IACd,MAAM3G,aAAa,CAACgB,MAAM,gEAA+B;EAC1D;;EAEDoB,SAAS,CAACsG,gBAAgB,GAAGyB,cAAc;EAE3C,OAAO,YAAK;IACV/H,SAAS,CAACsG,gBAAgB,GAAG,IAAI;EACnC,CAAC;AACH;;ACxCA;;;;;;;;;;;;;;;AAeG;AAwBH;;;;;;AAMG;AACa,6BAAoB,GAA4B;EAAA,IAA3B5C,0EAAmBsE,MAAM,EAAE;;;;;EAK9DV,iBAAiB,EAAE,CAACW,IAAI,CACtB,qBAAW,EAAG;;IAEZ,IAAI,CAACC,WAAW,EAAE;MAChB,MAAMtK,aAAa,CAACgB,MAAM,2DAA+B;IAC1D;GACF,EACD,WAAC,EAAG;;IAEF,MAAMhB,aAAa,CAACgB,MAAM,iEAAkC;EAC9D,CAAC,CACF;;EACD,OAAOuJ,YAAY,CAACC,kBAAkB,CAAC1E,GAAG,CAAC,EAAE,WAAW,CAAC,CAACkD,YAAY,EAAE;AAC1E;AA6BA;;;;;;;;;;;;;;AAcG;AAdH,SAesBrH,QAAQ;EAAA;AAAA;AAQ9B;;;;;;;;;AASG;AATH;EAAA,uEARO,mBACLS,SAAoB,EACpB2D,OAAyB;IAAA;MAAA;QAAA;UAEzB3D,SAAS,GAAGoI,kBAAkB,CAACpI,SAAS,CAAC;UAAC,mCACnCqI,UAAS,CAACrI,SAA6B,EAAE2D,OAAO,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACzD;EAAA;AAAA;AAYK,SAAUmE,WAAW,CAAC9H,SAAoB;EAC9CA,SAAS,GAAGoI,kBAAkB,CAACpI,SAAS,CAAC;EACzC,OAAOsI,aAAY,CAACtI,SAA6B,CAAC;AACpD;AAEA;;;;;;;;;;;;AAYG;AACa,kBAAS,CACvBA,SAAoB,EACpB+H,cAAiE;EAEjE/H,SAAS,GAAGoI,kBAAkB,CAACpI,SAAS,CAAC;EACzC,OAAOuI,WAAU,CAACvI,SAA6B,EAAE+H,cAAc,CAAC;AAClE;;ACtJA;;;;AAIG;AAuCHd,yBAAyB,EAAE","names":["DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","ENDPOINT","CONSOLE_CAMPAIGN_ID","CONSOLE_CAMPAIGN_NAME","CONSOLE_CAMPAIGN_TIME","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","MessageType","arrayToBase64","array","uint8Array","Uint8Array","base64String","btoa","String","fromCharCode","replace","base64ToArray","padding","repeat","length","base64","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","indexedDB","databases","dbNames","map","db","name","includes","tokenDetails","openDB","upgrade","oldVersion","newVersion","upgradeTransaction","objectStoreNames","contains","objectStore","index","get","value","clear","oldDetails","auth","p256dh","endpoint","token","fcmToken","createTime","now","subscriptionOptions","swScope","vapidKey","close","deleteDB","checkTokenDetails","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDb","createObjectStore","dbGet","firebaseDependencies","key","getKey","transaction","appConfig","oldTokenDetails","dbSet","tx","put","done","dbRemove","delete","appId","ERROR_MAP","ERROR_FACTORY","ErrorFactory","requestGetToken","getHeaders","headers","body","getBody","subscribeOptions","method","JSON","stringify","fetch","getEndpoint","response","json","responseData","create","errorInfo","toString","error","message","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","projectId","installations","getToken","authToken","Headers","Accept","apiKey","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","getPushSubscription","swRegistration","pushSubscription","scope","getNewToken","isTokenValid","console","warn","Date","updateToken","deleteTokenInternal","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","subscription","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcmMessageId","propagateNotificationPayload","propagateDataPayload","propagateFcmOptions","messagePayloadInternal","notification","title","image","icon","data","fcmOptions","link","click_action","analyticsLabel","analytics_label","isConsoleMessage","_mergeStrings","s1","s2","resultArray","push","charAt","join","extractAppConfig","app","options","getMissingValueError","configKeys","keyName","appName","messagingSenderId","valueName","MessagingService","analyticsProvider","Promise","resolve","registerDefaultSw","navigator","serviceWorker","register","update","catch","browserErrorMessage","updateSwReg","ServiceWorkerRegistration","updateVapidKey","Notification","permission","requestPermission","serviceWorkerRegistration","logToScion","messageType","eventType","getEventType","analytics","logEvent","message_id","message_name","message_time","message_device_time","Math","floor","NOTIFICATION_CLICKED","PUSH_RECEIVED","Error","messageEventListener","event","isFirebaseMessaging","onMessageHandler","next","dataPayload","WindowMessagingFactory","container","getProvider","getImmediate","addEventListener","e","WindowMessagingInternalFactory","messagingInternal","registerMessagingInWindow","_registerComponent","Component","registerVersion","version","isWindowSupported","validateIndexedDBOpenable","window","isIndexedDBAvailable","areCookiesEnabled","prototype","hasOwnProperty","PushSubscription","deleteToken","nextOrObserver","getApp","then","isSupported","_getProvider","getModularInstance","_getToken","_deleteToken","_onMessage"],"sources":["/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/util/constants.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/interfaces/internal-message-payload.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/array-base64-translator.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/migrate-old-database.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/internals/idb-manager.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/util/errors.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/internals/requests.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/internals/token-manager.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/externalizePayload.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/is-console-message.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/logToFirelog.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/extract-app-config.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/messaging-service.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/registerDefaultSw.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/updateSwReg.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/updateVapidKey.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/api/getToken.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/logToScion.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/listeners/window-listener.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/helpers/register.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/api/isSupported.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/api/deleteToken.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/api/onMessage.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/api.ts","/Users/sujayghosh/Documents/netflix/node_modules/@firebase/messaging/src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n  icon?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, deleteDB, openDB } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\ninterface MessagingDB extends DBSchema {\n  'firebase-messaging-store': {\n    key: string;\n    value: TokenDetails;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<MessagingDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<MessagingDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n\n  const icon = messagePayloadInternal.notification!.icon;\n  if (!!icon) {\n    payload.notification!.icon = icon;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (\n    !messagePayloadInternal.fcmOptions &&\n    !messagePayloadInternal.notification?.click_action\n  ) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link =\n    messagePayloadInternal.fcmOptions?.link ??\n    messagePayloadInternal.notification?.click_action;\n\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions?.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: (e as Error)?.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics =\n    await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","/**\n * Firebase Cloud Messaging\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\n\nimport { Messaging } from './interfaces/public-types';\nimport { registerMessagingInWindow } from './helpers/register';\n\nexport {\n  getToken,\n  deleteToken,\n  onMessage,\n  getMessagingInWindow as getMessaging\n} from './api';\nexport { isWindowSupported as isSupported } from './api/isSupported';\nexport * from './interfaces/public-types';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging': Messaging;\n  }\n}\n\nregisterMessagingInWindow();\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}