{"ast":null,"code":"var _jsxFileName = \"/Users/sujayghosh/Documents/netflix/src/Screens/PlanScreen.js\",\n  _s = $RefreshSig$();\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { getRoles } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport db from \"../firebase\";\nimport \"./PlanScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlanScreen() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n  const [subscription, setsubscription] = useState(null);\n  useEffect(() => {\n    db.collection('customers').doc(user.uid).collection('subscriptions').get().then(querySnapshort => {\n      querySnapshort.forEach(async subscription => {\n        role: subscription.data();\n      });\n    });\n  }, []);\n  useEffect(() => {\n    db.collection(\"products\").where(\"active\", \"==\", true).get().then(querySnapshort => {\n      const products = {};\n      querySnapshort.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection(\"prices\").get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n  console.log(products);\n  const loadCheckout = async priceId => {\n    const docRef = await db.collection('customers').doc(user.uid).collection(\"checkout_sessions\").add({\n      price: priceId,\n      success_url: window.location.origin,\n      cancel_url: window.location.origin\n    });\n    docRef.onSnapshot(async snap => {\n      const {\n        error,\n        sessionId\n      } = snap.data();\n      if (error) {\n        alert(`An error occurred: ${error.message}`);\n      }\n      if (sessionId) {\n        const stripe = await loadStripe(\"pk_test_51MVcA6SCUViwXHI98bsZZ6SAApob7bE88hnBKjXFNM4Xh510P0D4WMNYgEvdpfcO4vMivKZnkMokYeewDMzahKz500voXiuD0n\");\n        stripe.redirectToCheckout({\n          sessionId\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planScreen\",\n    children: Object.entries(products).map(_ref => {\n      let [productsId, productData] = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planScreen_plan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planScreen_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: productData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadCheckout(productData.prices.priceId),\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(PlanScreen, \"cnCdo2B9+Pnp8l4yk0AaRqC/5as=\", false, function () {\n  return [useSelector];\n});\n_c = PlanScreen;\nexport default PlanScreen;\nvar _c;\n$RefreshReg$(_c, \"PlanScreen\");","map":{"version":3,"names":["loadStripe","getRoles","React","useEffect","useState","useSelector","selectUser","db","PlanScreen","products","setProducts","user","subscription","setsubscription","collection","doc","uid","get","then","querySnapshort","forEach","role","data","where","productDoc","id","priceSnap","ref","docs","price","prices","priceId","priceData","console","log","loadCheckout","docRef","add","success_url","window","location","origin","cancel_url","onSnapshot","snap","error","sessionId","alert","message","stripe","redirectToCheckout","Object","entries","map","productsId","productData","name","description"],"sources":["/Users/sujayghosh/Documents/netflix/src/Screens/PlanScreen.js"],"sourcesContent":["import { loadStripe } from \"@stripe/stripe-js\";\nimport { getRoles } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport db from \"../firebase\";\nimport \"./PlanScreen.css\";\n\nfunction PlanScreen() {\n  const [products, setProducts] = useState([]);\n  const user = useSelector(selectUser);\n  const [subscription, setsubscription] = useState(null);\n\n  useEffect(() => {\n    db.collection('customers').doc(user.uid).collection('subscriptions').get().then(querySnapshort => {\n        querySnapshort.forEach(async subscription => {\n            role: subscription.data() \n        })\n    })\n  }, [])\n\n  useEffect(() => {\n    db.collection(\"products\")\n      .where(\"active\", \"==\", true)\n      .get()\n      .then((querySnapshort) => {\n        const products = {};\n        querySnapshort.forEach(async (productDoc) => {\n          products[productDoc.id] = productDoc.data();\n          const priceSnap = await productDoc.ref.collection(\"prices\").get();\n          priceSnap.docs.forEach((price) => {\n            products[productDoc.id].prices = {\n              priceId: price.id,\n              priceData: price.data(),\n            };\n          });\n        });\n        setProducts(products);\n      });\n  }, []);\n\n  console.log(products);\n\n  const loadCheckout = async (priceId) => {\n    const docRef = await db.collection('customers').doc(user.uid).collection(\"checkout_sessions\").add({\n        price: priceId,\n        success_url: window.location.origin,\n        cancel_url: window.location.origin,\n    });\n\n    docRef.onSnapshot(async(snap) => {\n        const { error, sessionId } = snap.data();\n\n        if (error) {\n            alert(`An error occurred: ${error.message}`);\n        }\n\n        if (sessionId) {\n            const stripe = await loadStripe(\"pk_test_51MVcA6SCUViwXHI98bsZZ6SAApob7bE88hnBKjXFNM4Xh510P0D4WMNYgEvdpfcO4vMivKZnkMokYeewDMzahKz500voXiuD0n\");\n\n            stripe.redirectToCheckout({ sessionId });\n        }\n    })\n  };\n\n  return (\n    <div className=\"planScreen\">\n      {Object.entries(products).map(([productsId, productData]) => {\n        return (\n          <div className=\"planScreen_plan\">\n            <div className=\"planScreen_info\">\n              <h5>{productData.name}</h5>\n              <h6>{productData.description}</h6>\n            </div>\n\n            <button onClick={() => loadCheckout(productData.prices.priceId)}>\n                Subscribe\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PlanScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}